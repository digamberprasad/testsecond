/**
* Test class of PersonWS class
* @Author : Nikhil Jaitly
* @Created Date : 25/06/2016
*/


@isTest
private class PersonWSTest {
	
	@isTest static void testArrayOfPerson() {
		new PersonWS.ArrayOfPerson();
	}
	
	@isTest static void testArrayOfPersonRegistration() {
		new PersonWS.ArrayOfPersonRegistration();
	}

	@isTest static void testAddress() {
		new PersonWS.Address();
	}


	@isTest static void testSearchClassesHelperResponse_element() {
		new PersonWS.SearchClassesHelperResponse_element();
	}



	@isTest static void testregisterPersonResponse_element() {
		new PersonWS.registerPersonResponse_element();
	}



	@isTest static void testSCPersonAdminNF() {
		new PersonWS.SCPersonAdminNF();
	}


	@isTest static void testgetAdminChangeStatusListResponse_element() {
		new PersonWS.getAdminChangeStatusListResponse_element();
	}



	@isTest static void testgetPersonRegistrationYearList_element() {
		new PersonWS.getPersonRegistrationYearList_element();
	}

	@isTest static void testArrayOfAdminChangeStatusPerson() {
		new PersonWS.ArrayOfAdminChangeStatusPerson();
	}

	@isTest static void testaddPerson_element() {
		new PersonWS.addPerson_element();
	}

	@isTest static void testupdatePersonNoviceQualificationResponse_element() {
		new PersonWS.updatePersonNoviceQualificationResponse_element();
	}

	@isTest static void testconfirmAddPerson_element() {
		new PersonWS.confirmAddPerson_element();
	}

	@isTest static void testArrayOfAdminChangeReasonPerson() {
		new PersonWS.ArrayOfAdminChangeReasonPerson();
	}

	@isTest static void testsearchForPersonAltResponse_element() {
		new PersonWS.searchForPersonAltResponse_element();
	}

	@isTest static void testgetPersonResponse_element() {
		new PersonWS.getPersonResponse_element();
	}

	@isTest static void testArrayOfPersonDuplicate() {
		new PersonWS.ArrayOfPersonDuplicate();
	}

	@isTest static void testPersonDuplicate() {
		new PersonWS.PersonDuplicate();
	}

	@isTest static void testSearchClassesHelper_element() {
		new PersonWS.SearchClassesHelper_element();
	}

	@isTest static void testaddPersonNoviceQualification_element() {
		new PersonWS.addPersonNoviceQualification_element();
	}

	@isTest static void testregisterTrainer_element() {
		new PersonWS.registerTrainer_element();
	}

	@isTest static void testSCPersonAnyID() {
		new PersonWS.SCPersonAnyID();
	}

	@isTest static void testgetPersonRegistrationListResponse_element() {
		new PersonWS.getPersonRegistrationListResponse_element();
	}

	@isTest static void testLeague() {
		new PersonWS.League();
	}

	@isTest static void testAdminChangeStatusPerson() {
		new PersonWS.AdminChangeStatusPerson();
	}

	@isTest static void testEnduranceNationalResult() {
		new PersonWS.EnduranceNationalResult();
	}

	@isTest static void testconfirmAddPersonResponse_element() {
		new PersonWS.confirmAddPersonResponse_element();
	}

	@isTest static void testregisterPerson_element() {
		new PersonWS.registerPerson_element();
	}

	@isTest static void testPersonRegistration() {
		new PersonWS.PersonRegistration();
	}

	@isTest static void testrequestAdministrationChange_element() {
		new PersonWS.requestAdministrationChange_element();
	}

	@isTest static void testgetPersons_element() {
		new PersonWS.getPersons_element();
	}

	@isTest static void testaddPersonNoviceQualificationResponse_element() {
		new PersonWS.addPersonNoviceQualificationResponse_element();
	}

	@isTest static void testSCPersonWC() {
		new PersonWS.SCPersonWC();
	}

	@isTest static void testArrayOfAddress() {
		new PersonWS.ArrayOfAddress();
	}

	@isTest static void testSCBase() {
		new PersonWS.SCBase();
	}

	@isTest static void testSCPersonStatus() {
		new PersonWS.SCPersonStatus();
	}

	@isTest static void testupdatePersonNoviceQualification_element() {
		new PersonWS.updatePersonNoviceQualification_element();
	}

	@isTest static void testaddPersonResponse_element() {
		new PersonWS.addPersonResponse_element();
	}

	@isTest static void testupdatePerson_element() {
		new PersonWS.updatePerson_element();
	}

	@isTest static void testgetPersonRegistrationList_element() {
		new PersonWS.getPersonRegistrationList_element();
	}

	@isTest static void testgetPersonLeagues_element() {
		new PersonWS.getPersonLeagues_element();
	}

	@isTest static void testArrayOfLeague() {
		new PersonWS.ArrayOfLeague();
	}

	@isTest static void testSCPersonRegistrationFrom() {
		new PersonWS.SCPersonRegistrationFrom();
	}

	@isTest static void testSCPersonGender() {
		new PersonWS.SCPersonGender();
	}

	@isTest static void testgetPersonsResponse_element() {
		new PersonWS.getPersonsResponse_element();
	}

	@isTest static void testgetAdminChangeStatusList_element() {
		new PersonWS.getAdminChangeStatusList_element();
	}

	@isTest static void testdeletePersonNoviceQualificationResponse_element() {
		new PersonWS.deletePersonNoviceQualificationResponse_element();
	}

	@isTest static void testPerson() {
		new PersonWS.Person();
	}

	@isTest static void testsearchForPersonAlt_element() {
		new PersonWS.searchForPersonAlt_element();
	}

	@isTest static void testArrayOfSCBase() {
		new PersonWS.ArrayOfSCBase();
	}

	@isTest static void testdeletePersonNoviceQualification_element() {
		new PersonWS.deletePersonNoviceQualification_element();
	}
	
	
	@isTest static void testgetPersonAddressList_element() {
		new PersonWS.getPersonAddressList_element();
	}
	

	@isTest static void testupdateAddressPersonResponse_element() {
		new PersonWS.updateAddressPersonResponse_element();
	}
	

	@isTest static void testMessage() {
		new PersonWS.Message();
	}
	

	@isTest static void testsetPersonLeagueResponse_element() {
		new PersonWS.setPersonLeagueResponse_element();
	}
	

	@isTest static void testArrayOfSearchCriteria() {
		new PersonWS.ArrayOfSearchCriteria();
	}
	

	@isTest static void testSearchClasses() {
		new PersonWS.SearchClasses();
	}
	

	@isTest static void testBaseEntityFacadeOfENDURANCE_NATIONAL_RESULT() {
		new PersonWS.BaseEntityFacadeOfENDURANCE_NATIONAL_RESULT();
	}
	

	@isTest static void testgetAdminChangeReasonListResponse_element() {
		new PersonWS.getAdminChangeReasonListResponse_element();
	}
	

	@isTest static void testconfirmUpdatePersonResponse_element() {
		new PersonWS.confirmUpdatePersonResponse_element();
	}
	

	@isTest static void testsearchForPersonResponse_element() {
		new PersonWS.searchForPersonResponse_element();
	}
	

	@isTest static void testArrayOfEnduranceNationalResult() {
		new PersonWS.ArrayOfEnduranceNationalResult();
	}
	

	@isTest static void testgetPersonAddressListResponse_element() {
		new PersonWS.getPersonAddressListResponse_element();
	}
	

	@isTest static void testupdateAddressPerson_element() {
		new PersonWS.updateAddressPerson_element();
	}
	

	@isTest static void testgetPerson_element() {
		new PersonWS.getPerson_element();
	}
	

	@isTest static void testconfirmUpdatePerson_element() {
		new PersonWS.confirmUpdatePerson_element();
	}
	

	@isTest static void testSCPersonRegistrationTo() {
		new PersonWS.SCPersonRegistrationTo();
	}
	

	@isTest static void testsearchForPerson_element() {
		new PersonWS.searchForPerson_element();
	}
	

	@isTest static void testAdminChangeReasonPerson() {
		new PersonWS.AdminChangeReasonPerson();
	}
	

	@isTest static void testrequestAdministrationChangeResponse_element() {
		new PersonWS.requestAdministrationChangeResponse_element();
	}
	

	@isTest static void testgetPersonCurrentNoviceQualification_element() {
		new PersonWS.getPersonCurrentNoviceQualification_element();
	}
	

	@isTest static void testSCPersonAnyName() {
		new PersonWS.SCPersonAnyName();
	}
	

	@isTest static void testgetAdminChangeReasonList_element() {
		new PersonWS.getAdminChangeReasonList_element();
	}
	

	@isTest static void testAuthHeader() {
		new PersonWS.AuthHeader();
	}
	

	@isTest static void testgetPersonRegistrationYearListResponse_element() {
		new PersonWS.getPersonRegistrationYearListResponse_element();
	}
	

	@isTest static void testgetPersonCurrentNoviceQualificationResponse_element() {
		new PersonWS.getPersonCurrentNoviceQualificationResponse_element();
	}
	

	@isTest static void testaddAddressPerson_element() {
		new PersonWS.addAddressPerson_element();
	}
	

	@isTest static void testSCPersonRegistration() {
		new PersonWS.SCPersonRegistration();
	}
	

	@isTest static void testregisterTrainerResponse_element() {
		new PersonWS.registerTrainerResponse_element();
	}
	

	@isTest static void testArrayOfMessage() {
		new PersonWS.ArrayOfMessage();
	}
	

	@isTest static void testSCPersonRegistrationDiscipline() {
		new PersonWS.SCPersonRegistrationDiscipline();
	}
	

	@isTest static void testaddAddressPersonResponse_element() {
		new PersonWS.addAddressPersonResponse_element();
	}
	

	@isTest static void testSearchCriteria() {
		new PersonWS.SearchCriteria();
	}
	

	@isTest static void testSCPersonCompetingFor() {
		new PersonWS.SCPersonCompetingFor();
	}
	

	@isTest static void testupdatePersonResponse_element() {
		new PersonWS.updatePersonResponse_element();
	}
	

	@isTest static void testsetPersonLeague_element() {
		new PersonWS.setPersonLeague_element();
	}
	

	@isTest static void testArrayOfString() {
		new PersonWS.ArrayOfString();
	}
	

	@isTest static void testValidatableEntityFacadeOfENDURANCE_NATIONAL_RESULT() {
		new PersonWS.ValidatableEntityFacadeOfENDURANCE_NATIONAL_RESULT();
	}
	

	@isTest static void testArrayOfInt() {
		new PersonWS.ArrayOfInt();
	}
	

	@isTest static void testgetPersonLeaguesResponse_element() {
		new PersonWS.getPersonLeaguesResponse_element();
	}
	

	@isTest static void testPersonWSSoap() {


		Test.setMock(WebServiceMock.class, new PersonWSMock());
		Test.startTest();	
		PersonWS.PersonWSSoap phs = new PersonWS.PersonWSSoap();

		phs.addPerson(new PersonWS.Person());
		phs.getPersonRegistrationList(56);
		phs.requestAdministrationChange(56);
		phs.confirmUpdatePerson('');
		phs.getPersonRegistrationYearList(56,56);
		phs.getPersonLeagues(56,'');
		phs.getPersons(new PersonWS.ArrayOfInt());
		phs.searchForPersonAlt(new PersonWS.ArrayOfSearchCriteria());
		//phs.getAdminChangeStatusList();
		phs.updateAddressPerson(56,new PersonWS.Address());
		phs.deletePersonNoviceQualification('',System.now());
		phs.addAddressPerson(56,new PersonWS.Address());
		phs.confirmAddPerson('');
		phs.addPersonNoviceQualification('', new PersonWS.ArrayOfEnduranceNationalResult());
		phs.updatePerson(new PersonWS.Person());
		phs.registerTrainer(56,56);
		//phs.getAdminChangeReasonList();
		phs.registerPerson(5,5,new PersonWS.ArrayOfString());
		phs.setPersonLeague(5,'','');
		phs.getPersonAddressList(6);
		phs.updatePersonNoviceQualification('',System.now(),new PersonWS.ArrayOfEnduranceNationalResult());
		phs.searchForPerson(new PersonWS.ArrayOfSCBase());
		phs.getPerson(6);
		phs.getPersonCurrentNoviceQualification('');
	}	
	
}